syntax = "proto3";
package turn;

import "google/protobuf/empty.proto";

message GetPasswordRequest {
    string addr = 1;
    string name = 2;
}

message GetPasswordReply {
    string password = 1;
}

message AllocatedRequest {
    string addr = 1;
    string name = 2;
    uint32 port = 3;
}

message BindingRequest {
    string addr = 1;
}

message ChannelBindRequest {
    string addr = 1;
    string name = 2;
    uint32 number = 3;
}

message CreatePermissionRequest {
    string addr = 1;
    string name = 2;
    string relay = 3;
}

message RefreshRequest {
    string addr = 1;
    string name = 2;
    uint32 time = 3;
}

message AbortRequest {
    string addr = 1;
    string name = 2;
}

service Hooks {
    rpc GetPassword (GetPasswordRequest) returns (GetPasswordReply);
    rpc Allocated (AllocatedRequest) returns (google.protobuf.Empty);
    rpc Binding (BindingRequest) returns (google.protobuf.Empty);
    rpc ChannelBind (ChannelBindRequest) returns (google.protobuf.Empty);
    rpc CreatePermission (CreatePermissionRequest) returns (google.protobuf.Empty);
    rpc Refresh (RefreshRequest) returns (google.protobuf.Empty);
    rpc Abort (AbortRequest) returns (google.protobuf.Empty);
}

enum Transport {
    TCP = 0;
    UDP = 1;
}

message Interface {
    Transport transport = 1;
    string bind = 2;
    string external = 3;
}

message Stats {
    string software = 1;
    uint64 uptime = 3;
    uint32 port_capacity = 4;
    uint32 port_allocated = 5;
    string realm = 6;
    repeated Interface interfaces = 2;
}

message Report {
    string addr = 1;
    uint64 received_bytes = 2;
    uint64 send_bytes = 3;
    uint64 received_pkts = 4;
    uint64 send_pkts = 5;
}

message GetReportReply {
    repeated Report reports = 1;
}

message QueryFilter {
    optional uint32 skip = 1;
    optional uint32 limit = 2;
}

message User {
    string name = 1;
    repeated string addrs = 2;
}

message GetUsersReply {
    repeated User users = 1;
}

message AddrParams {
    string addr = 1;
}

message Session {
    string username = 1;
    string password = 2;
    uint64 lifetime = 3;
    uint64 timer = 4;
    repeated uint32 channels = 5;
    repeated uint32 ports = 6;
}

message GetSessionReply {
    optional Session session = 1;
}

service Controller {
    rpc GetStats (google.protobuf.Empty) returns (Stats);
    rpc GetReport (QueryFilter) returns (GetReportReply);
    rpc GetUsers (QueryFilter) returns (GetUsersReply);
    rpc GetSession (AddrParams) returns (GetSessionReply);
    rpc RemoveSession (AddrParams) returns (google.protobuf.Empty);
}
