name: publish release
on:
    push:
        tags:
            - 'v*'
jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                target:
                    - aarch64-apple-darwin
                    - aarch64-pc-windows-msvc
                    - aarch64-unknown-linux-musl
                    - loongarch64-unknown-linux-musl
                    - powerpc64-unknown-linux-gnu
                    - riscv64gc-unknown-linux-gnu
                    - x86_64-apple-darwin
                    - x86_64-pc-windows-msvc
                    - x86_64-unknown-linux-musl
        steps:
            -
                uses: actions/checkout@v4
            -
                uses: actions/cache@v4
                with:
                    path: |
                        ~/.cargo/bin/
                        ~/.cargo/registry/index/
                        ~/.cargo/registry/cache/
                        ~/.cargo/git/db/
                        target/
                    key: '${{ runner.os }}-cargo-${{ hashFiles(''**/Cargo.lock'') }}'
            -
                name: Install dependencies
                run: |
                    sudo apt update
                    sudo apt install -y gcc-aarch64-linux-gnu
                    rustup target add ${{ matrix.target }}
                    which cargo-zigbuild || cargo install cargo-zigbuild
                    sudo snap install zig --classic --beta
            -
                name: Build release
                run: cargo zigbuild --target ${{ matrix.target }} --release
            -
                name: Rename release
                run: |
                    mv ./target/release/turn-server ./target/release/turn-server-${{ matrix.target }}
            -
                name: Upload artifact
                uses: actions/upload-artifact@v4
                with:
                    name: ${{ matrix.target }}
                    path: |
                        ./target/release/turn-server-${{ matrix.target }}
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            -
                name: Download All Artifacts
                uses: actions/download-artifact@v4
                with:
                    path: artifacts
            -
                name: Create release
                id: create_release
                uses: softprops/action-gh-release@v1
                env:
                    GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
                with:
                    tag_name: ${{ github.ref_name }}
                    name: ${{ github.ref_name }}
                    draft: false
                    prerelease: false
                    files: artifacts/**/*
